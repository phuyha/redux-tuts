{"ast":null,"code":"import _toConsumableArray from \"/home/huyha/per/source/redux-tuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/huyha/per/source/redux-tuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/huyha/per/source/redux-tuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/huyha/per/source/redux-tuts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar initialState = {\n  items: []\n};\nvar ADD_TODO = \"ADD_TODO\";\nvar SET_TODOS = \"SET_TODOS\";\nexport var addToDo = function addToDo(text) {\n  return {\n    type: ADD_TODO,\n    payload: text\n  };\n};\nexport var setTodos = function setTodos(items) {\n  return {\n    type: SET_TODOS,\n    payload: items\n  };\n};\nexport var fetchTodos = function fetchTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n            case 2:\n              res = _context.sent;\n              dispatch(setTodos(res.data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: [].concat(_toConsumableArray(state.items), [action.payload])\n      });\n\n    case SET_TODOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/huyha/per/source/redux-tuts/src/redux/todo.js"],"names":["axios","initialState","items","ADD_TODO","SET_TODOS","addToDo","text","type","payload","setTodos","fetchTodos","dispatch","get","res","data","reducer","state","action"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AAChCC,IAAAA,IAAI,EAAEJ,QAD0B;AAEhCK,IAAAA,OAAO,EAAEF;AAFuB,GAAX;AAAA,CAAhB;AAKP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACP,KAAD;AAAA,SAAY;AAClCK,IAAAA,IAAI,EAAEH,SAD4B;AAElCI,IAAAA,OAAO,EAAEN;AAFyB,GAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZX,KAAK,CAACY,GAAN,CAAU,4CAAV,CADY;;AAAA;AACxBC,cAAAA,GADwB;AAE9BF,cAAAA,QAAQ,CAACF,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAT,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAKP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBf,YAAyB;AAAA,MAAXgB,MAAW;;AAChD,UAAQA,MAAM,CAACV,IAAf;AACE,SAAKJ,QAAL;AACE,6CACKa,KADL;AAEEd,QAAAA,KAAK,+BAAMc,KAAK,CAACd,KAAZ,IAAmBe,MAAM,CAACT,OAA1B;AAFP;;AAIF,SAAKJ,SAAL;AACE,6CACKY,KADL;AAEEd,QAAAA,KAAK,EAAEe,MAAM,CAACT;AAFhB;;AAIF;AACE,aAAOQ,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import axios from \"axios\";\n\nconst initialState = {\n  items: []\n};\n\nconst ADD_TODO = \"ADD_TODO\";\nconst SET_TODOS = \"SET_TODOS\";\n\nexport const addToDo = (text) => ({\n  type: ADD_TODO,\n  payload: text\n});\n\nexport const setTodos = (items) => ({\n  type: SET_TODOS,\n  payload: items\n});\n\nexport const fetchTodos = () => async (dispatch) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n  dispatch(setTodos(res.data));\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case SET_TODOS:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}