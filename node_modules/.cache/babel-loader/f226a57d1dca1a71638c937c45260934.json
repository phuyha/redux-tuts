{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todo\";\nimport authReducer from \"./auth\";\nvar reducer = combineReducers({\n  todo: todoReducer,\n  auth: authReducer\n}); // function myMiddleware(store) {\n//   return function(next) {\n//     return function(action) {\n//     }\n//   }\n// }\n// const myMiddleware = (store) => (next) => (action) => {\n//   console.log(\"Action\", action, store.getState());\n//   if (action.type === \"ADD_TODO\" && action.payload === \"fuck\") {\n//     action.payload = \"****\";\n//   }\n//   return next(action);\n// };\n// const asyncMiddleware = (store) => (next) => (action) => {\n//   if (typeof action === \"function\") {\n//     return action(next);\n//   }\n//   return next(action);\n// };\n// const logger = createLogger();\n// export default createStore(reducer, applyMiddleware(logger, thunk));\n\nexport default configureStore({\n  reducer: reducer\n});","map":{"version":3,"sources":["/home/huyha/per/source/redux-tuts/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","createLogger","configureStore","todoReducer","authReducer","reducer","todo","auth"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,IAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,IAAI,EAAEH,WADwB;AAE9BI,EAAAA,IAAI,EAAEH;AAFwB,CAAD,CAA/B,C,CAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,eAAeF,cAAc,CAAC;AAC5BG,EAAAA,OAAO,EAAPA;AAD4B,CAAD,CAA7B","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todo\";\nimport authReducer from \"./auth\";\n\nconst reducer = combineReducers({\n  todo: todoReducer,\n  auth: authReducer\n});\n\n// function myMiddleware(store) {\n//   return function(next) {\n//     return function(action) {\n\n//     }\n//   }\n// }\n\n// const myMiddleware = (store) => (next) => (action) => {\n//   console.log(\"Action\", action, store.getState());\n//   if (action.type === \"ADD_TODO\" && action.payload === \"fuck\") {\n//     action.payload = \"****\";\n//   }\n//   return next(action);\n// };\n\n// const asyncMiddleware = (store) => (next) => (action) => {\n//   if (typeof action === \"function\") {\n//     return action(next);\n//   }\n//   return next(action);\n// };\n\n// const logger = createLogger();\n\n// export default createStore(reducer, applyMiddleware(logger, thunk));\n\nexport default configureStore({\n  reducer\n});\n"]},"metadata":{},"sourceType":"module"}