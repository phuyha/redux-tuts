{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todo\";\nimport authReducer from \"./auth\";\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: [\"auth\"]\n};\nvar reducer = combineReducers({\n  todo: todoReducer,\n  auth: authReducer\n});\nvar persistedReducer = persistReducer(persistConfig, reducer); // function myMiddleware(store) {\n//   return function(next) {\n//     return function(action) {\n//     }\n//   }\n// }\n// const myMiddleware = (store) => (next) => (action) => {\n//   console.log(\"Action\", action, store.getState());\n//   if (action.type === \"ADD_TODO\" && action.payload === \"fuck\") {\n//     action.payload = \"****\";\n//   }\n//   return next(action);\n// };\n// const asyncMiddleware = (store) => (next) => (action) => {\n//   if (typeof action === \"function\") {\n//     return action(next);\n//   }\n//   return next(action);\n// };\n// const logger = createLogger();\n// export default createStore(reducer, applyMiddleware(logger, thunk));\n\nvar store = configureStore({\n  reducer: persistedReducer\n}, false);\nexport var persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/home/huyha/per/source/redux-tuts/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","persistStore","persistReducer","storage","thunk","createLogger","configureStore","getDefaultMiddleware","todoReducer","authReducer","persistConfig","key","whitelist","reducer","todo","auth","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA,OAAO,EAAPA,OAFoB;AAGpBS,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,IAAMC,OAAO,GAAGd,eAAe,CAAC;AAC9Be,EAAAA,IAAI,EAAEN,WADwB;AAE9BO,EAAAA,IAAI,EAAEN;AAFwB,CAAD,CAA/B;AAKA,IAAMO,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,OAAhB,CAAvC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,IAAMI,KAAK,GAAGX,cAAc,CAAC;AAC3BO,EAAAA,OAAO,EAAEG;AADkB,CAAD,EAEzB,KAFyB,CAA5B;AAIA,OAAO,IAAME,SAAS,GAAGjB,YAAY,CAACgB,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todo\";\nimport authReducer from \"./auth\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\"auth\"]\n}\n\nconst reducer = combineReducers({\n  todo: todoReducer,\n  auth: authReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n// function myMiddleware(store) {\n//   return function(next) {\n//     return function(action) {\n\n//     }\n//   }\n// }\n\n// const myMiddleware = (store) => (next) => (action) => {\n//   console.log(\"Action\", action, store.getState());\n//   if (action.type === \"ADD_TODO\" && action.payload === \"fuck\") {\n//     action.payload = \"****\";\n//   }\n//   return next(action);\n// };\n\n// const asyncMiddleware = (store) => (next) => (action) => {\n//   if (typeof action === \"function\") {\n//     return action(next);\n//   }\n//   return next(action);\n// };\n\n// const logger = createLogger();\n\n// export default createStore(reducer, applyMiddleware(logger, thunk));\n\nconst store = configureStore({\n  reducer: persistedReducer\n}, false);\n\nexport const persistor = persistStore(store);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}